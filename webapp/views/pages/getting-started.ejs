<!DOCTYPE html>
<html lang="en">
<head>
    <% include ../partials/head %>
</head>
<body class="container">

<header>
    <% include ../partials/header %>
</header>

<main>
<div class="row">
    <div class="col-sm-8">
        <div class="jumbotron">
            <h1>EnlivenMinetest</h1>
            <p>Getting Started.</p>
            <h2>&nbsp;<!--result--></h2>
            <p><%= msg %></p>
        </div>
        <div>

<h2>Vegetable Farming</h2>
<ul>
<li>Super glow glass allows plants to grow without sunlight</li>
<li>Grass sometimes yields wheat seeds</li>
<li>Plants in the wild may be vegetables that you can eat or replant to
multiply them.</li>
</ul>
<h2>Animal Farming</h2>
<ul>
<li>Keep feeding the correct food to an animal to tame it. For
currently-known taming info not displayed here, see the enhancement
request for this webapp (the request has the taming info shown already)
at <a href="https://github.com/poikilos/EnlivenMinetest/issues/88">
Taming Guide</a></li>
<li>A nametag names a tamed animal.</li>
<li>A Mob Protection Rune prevents an animal from being killed.</li>
<li>There is a known issue with animals despawning: see
<a href="https://github.com/poikilos/EnlivenMinetest/issues/3">Neutral
Mobs Despawn Frequently</a> issue on GitHub.com/EnlivenMinetest to track
this issue.</li>
</ul>
<h2>Mining</h2>
<h3>Maximum Mining Depths</h3>
You must go below the maximum to get the material. Many materials also
have a deeper level below which they are more common.
Only a few materials stop occurring at lower depths (see "Stops Below"
column).
<%/* comment
<!--Updated info is at:<a target="_blank" href="https://github.com/minetest-technic/technic/blob/master/manual.md">https://github.com/minetest-technic/technic/blob/master/manual.md</a><br/>-->
*/%>
Currently-known mined resource elevations:<br/>
<style type="text/css">
#table-6 {
width: 100%
border: 1px solid #B0B0B0;
}
#table-6 tbody {
/* Kind of irrelevant unless your .css is already doing something else */
margin: 0;
padding: 0;
border: 0;
outline: 0;
font-size: 100%;
vertical-align: baseline;
background: transparent;
}
#table-6 thead {
text-align: left;
}
#table-6 thead th {
background: -moz-linear-gradient(top, #F0F0F0 0, #DBDBDB 100%);
background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #F0F0F0), color-stop(100%, #DBDBDB));
filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#F0F0F0', endColorstr='#DBDBDB', GradientType=0);
border: 1px solid #B0B0B0;
color: #444;
font-size: 16px;
font-weight: bold;
padding: 3px 10px;
}
#table-6 td {
padding: 3px 10px;
<p>}
#table-6 tr:nth-child(even) {
background: #F2F2F2;
}
</p></style>
<table id="table-6">
  <thead>
  <th>Resource</th><th>Stops Below</th><th>Max</th><th>Note</th>				<th>Supplied by Mod</th>
  </thead>
  <tbody>
  <tr><td>Lapis Block</td>	<td>-5000</td>		<td>+200</td>	<td></td>			<td>(minetest)</td></tr>
  <tr><td>Coal </td>	<td>&nbsp;</td>			<td>+64</td>	<td>abundant 0 or below</td>			<td>lapis</td></tr>
  <tr><td>Iron</td>		<td>&nbsp;</td>			<td>+2</td>		<td>more abundant as approaches -64</td><td>(default)</td></tr>
  <tr><td>Copper</td>	<td>&nbsp;</td>			<td>-16</td>	<td>abundant -64 or below</td>			<td>(default, formerly moreores)</td></tr>
  <tr><td>Tin</td>		<td>&nbsp;</td>			<td>+8</td>		<td>&nbsp;</td>							<td>moreores</td></tr>
  <tr><td>Zinc</td>		<td>&nbsp;</td>			<td>+2</td>		<td>&nbsp;</td>							<td>technic</td></tr>
  <tr><td>Chromium</td>	<td>&nbsp;</td>			<td>-100</td>	<td>&nbsp;</td>							<td>technic</tr>
  <tr><td>Uranium</td>	<td>-300</td>			<td>-80</td>	<td>&nbsp;</td>							<td>technic</td></tr>
  <tr><td>Silver</td>	<td>&nbsp;</td>			<td>-2</td>		<td>&nbsp;</td>							<td>moreores</td></tr>
  <tr><td>Gold</td>		<td>&nbsp;</td>			<td>-64</td>	<td>abundant -256 or below</td>			<td>(default, formerly moreores)</td></tr>
  <tr><td>Mithril</td>	<td>&nbsp;</td>			<td>-512</td>	<td>&nbsp;</td>							<td>moreores</td></tr>
  <tr><td>Lava</td>		<td>&nbsp;</td>			<td>-256</td>	<td>&nbsp;</td>							<td></td></tr>
  <tr><td>Mese</td>		<td>&nbsp;</td>			<td>-64</td>	<td>ore abundant -256 or below, blocks -1024 or below but rare</td><td>(minetest)</td></tr>
  <tr><td>Diamond</td>	<td>&nbsp;</td>			<td>-512</td>	<td>&nbsp;</td>							<td>(default, formerly technic)</td></tr>
  <tr><td>Marble</td>	<td>&nbsp;</td>			<td>-50</td>	<td>&nbsp;</td>							<td>technic</td></tr>
  <tr><td>Granite</td>	<td>&nbsp;</td>			<td>-150</td>	<td>&nbsp;</td>							<td>technic</td></tr>
  <tr><td>Mycena Essence,<br/>Glow Mese Crystal</td>	<td>-33,000</td>			<td>-700</td>	<td>&nbsp;</td>							<td>caverealms</td></tr>
  <tr><td>Dungeon Master's Lair</td>	<td>-5000</td>			<td>-4000</td>	<td>&nbsp;</td>							<td>caverealms</td></tr>
  <tr><td>Deep Realms</td>	<td></td>			<td>-7000</td>	<td>&nbsp;</td>							<td>caverealms</td></tr>
  </tbody>
</table>
<br/>
Bring food (and wood to make torches and other tools) to survive deep
underground.<br/>
Set home and go home using the inventory menu. The house button with the
<span style="font-weight:bold; color:darkred">red</span>
arrow sets home. If you die you can always click the house button with
the <span style="font-weight:bold; color:darkgreen">green</span> arrow
to go back home.<br/>
You can set additional homes by typing: /sethome, or /sethome2; then
return by typing /home, or /home2.
<h2>Protecting Your Builds and Items</h2>
<h3>Area Self-Protection</h3>
<ul>
<li>Type /area_pos set (including the slash)</li>
<li><b>Select the area</b> by clicking the opposite corners you want to
protect. Remember you're in 3D so you must consider that one should be
an upper corner and the other should be a lower corner, in addition to
being opposite from a top view.<br/>
Alternatively, use /area_pos set1 or /area_pos set2 to set the corners
separately.
</li>
<li>Type /protect AreaName (where AreaName is what you want to name your
area)</li>
<li>The default number of areas you can have
(areas.self_protection_max_areas) is 3, but this may be different in
each world <i>(See minetest/minetest.conf for single player. For servers,
see games/game/minetest.conf or worlds/world/world.conf)</i>.</li>
</ul>
To remove an area or remove a player from an area:
<ul>
    <li>* type /remove_area ID (where ID is the number you see at the
    bottom left when you are in the area--use the one for the player you
    want to remove)</li>
</ul>
To add additional players to your area:
<ul>
<li>Go to your area to see the ID (number) at the bottom left.</li>
<li>/select_area ID (but put the number instead of ID)<br/>
Alternatively, select a smaller area within the area (see "Select the
area" above).</li>
<li>/add_owner ID playername SubAreaName (but put the number instead of
ID; the SubAreaName can be the same as AreaName, but if you selected
a smaller part of your area manually, you may want to use a different
name to show that it uses different positions for the corners.</li>
</ul>
<p>
Your server's "areas.self_protection_privilege" may differ. For example,
it is build and you don't have the build privelege, you will getting a
message saying "required privelege: build." You should consult the
policies of the server you are on. You may be able to ask a moderator
with the basic_privs privelege to type "/grant playername build" where
"playername" is your player name.
</p>
<h3>Protection Blocks</h3>
Protection blocks are an easy way to protect the area around them.
<ul>
<li>Protection Blocks protect your area from other players</li>
<li>You can add other players to your protection block by name.</li>
<li>Protected chests &amp; doors: Anyone who is on the protection block
can use them.</li>
<li>Locked chests &amp; doors: Only the person who placed them can use
them, unless a key is made and given to another player (use skeleton key
on a locked target to change the skeleton into a key for the target
you're opening).</li>
<li>Your bones hold your items when you die. After one hour, other
players can take the items.</li>
<li><b>Moderators</b> may not be able to recover your items regarding
unprotected areas or items, since proving ownership or where items ended
up may be difficult or impossible. Always make sure anything you want to
keep is protected.</li>
</ul>
<h2>Issues</h2>
<b>Only if your server uses ENLIVEN</b>, report issues at
<a href="https://github.com/poikilos/EnlivenMinetest/issues">
github.com/poikilos/EnlivenMinetest/issues</a>
and include a screenshot (F12 saves screenshot to the minetest/bin
folder). You can often show what node the item is by pointing at it and
turning on the debug screen with F5. Otherwise, report them to a
moderator of your server (if you report it to a moderator first, the
issue is likely to be resolved faster).
<h2>Minetest Settings</h2>
All of the settings below can be followed from the Minetest Settings tab
(exit to menu if you are in-game, then click Settings).
<h3>Brightness</h3>
All Settings, Graphics, In-Game, Advanced, "Light Curve Mid Boost = 0.5"
(default 0.2): recommended when using Filmic Tone Mapping (In-game,
Shaders, Tone Mapping, Filmic tone mapping), which makes dark areas
almost black in caves where there is no moonlight. Caves are dark. Make
torches. Changing your settings so you can mine in the dark is "cheaty."
<a name="cheaty"></a>Doing things that are "cheaty" lead to an immature
pointless game of getting more blocks than anyone else. Make a cool mine
with cool torches. Make an awesome railway that you and other players
can ride (remember to protect it--see above).

<h3>Screenshot Location &amp; Format</h3>
All Settings, Graphics, Menus, then change "Screenshot folder" and
"Screenshot format" if desired (recommended: make a Screenshots
directory in your computer's Pictures folder and use that, and use jpg
format to save space).
        </div>
    </div>
</div>
<h3>Feature Requests</h3>
If you feel like something is lacking such as features found in other
games, <b>and your server uses ENLIVEN</b>, consider visiting the
<a href="https://github.com/poikilos/EnlivenMinetest/issues/58">Not in
Minetest - Feedback Forum</a> issue on the EnlivenMinetest GitHub
project. Otherwise, contact a moderator of your server (you can still
visit the link to get an idea of what mods are available for Minetest
servers).

<h3>Modding</h3>
<p>There are other modding books out there, but they often just rehash
the documentation of Minetest without explaining much. The Modding
section of the ENLIVEN Getting Started guide is here to help explain
some of the assumptions and jargon.
</p>
<p>Modding is easy in Minetest, because it is designed to be modded.
The Minetest client downloads the "game" (collection of mods and
modpacks) each time you connect to a server, so you don't have to
install anything yourself. Automatic "game" downloading also means that
each server can be very different, but load quickly, offering you many
experiences to try easily.</p>
<p>Anyone can make a "game" using Minetest by
writing mods or combining existing mods. Most "games" are based on
games that are included in the Minetest/games directory--however, some
games that differ drastically in gameplay can be made if one heavily
edits or replaces mods that provide core functionality. Must of
Minetest's core functionality is written in Lua.
</p>
<p>Examples are a good way to get started. Since mods are scripted in
Lua, every mod is open source. Almost every one is released under
some sort of public license as well, which usually allows you to modify,
reuse, and redistribute the code (usually under the condition that you
credit the original author). The license file sometimes has no file
extension, so you may have to pick a program to open it in Windows.
You can open it (or any other text file) in Notepad. However, Geany
is recommended since there is more than one undo step. For Lua
programming, you can install ZeroBrane Studio (which is free) then
install
"<a href="https://github.com/poikilos/MinetestIDE">MinetestIDE</a>"
which patches ZeroBrane Studio to provide code completion
(a form of autocomplete with API usage tips for coding).
</p>
<p>Every mod, at minimum, must have a file called init.lua. You
should also add a description.txt describing it, a README.md or other
readme file explaining more, and a LICENSE.md or other license file
MIT License is used for Minetest itself, that is recommended. Some
people consider using GPL v3 to prevent the program from being used
on popular mobile devices, since the GPL v3 specifies that a user must
be able to not only reprogram but also replace the program with their
recompiled version--this may not be possible if your version shares a
namespace and key with the application you are changing, and you may not
have the same connectivity or functionality without using the same key.
Therefore, components or mods using GPL v3 may prevent their inclusion
into future version of Minetest "games", as several versions of
Minetest (often by other names) are on Google Play and the iOS App
Store.
You can find the MIT License online and paste it into Notepad or Geany.
Be sure to fill
in your name and the year you created the mod. Having a license will
make sure others feel safe using your mod and redistributing it if
that's what you want.</p>
<p>
API means application programming interface. It is just the set of
classes and/or functions you use to change the behavior of an existing
program such as Minetest. Mods that add significant features, such as
Mobs Redo or codermobs, usually have their own API. You can see all of
the functions in the api.lua file if the author has followed naming
conventions and placed public features there. In addition, many mods
have a api.txt or similarly named files. You can start by opening up
your minetest directory on your computer (after installing or otherwise
installing Minetest) and doing a search for api, or just open the
following files depending on what you want to do:
</p>
<ul>
<li>minetest/doc/menu_lua_api.txt</li>
<li>minetest/doc/fst_api.txt</li>
<li>minetest/doc/lua_api.txt</li>
<li>minetest/doc/client_lua_api.txt</li>
<li>minetest/games/Bucket_Game/mods/codercore/areas/api.md</li>
<li>minetest/games/Bucket_Game/mods/codercore/craft_guide/api_craft_guide.lua</li>
<li>minetest/games/Bucket_Game/mods/codermobs/mobs/api_new.txt</li>
<li>minetest/games/Bucket_Game/mods/codermobs/mobs/api.txt</li>
<li>minetest/games/Bucket_Game/mods/coderbuild/hopper/api.txt</li>
<li>minetest/games/Bucket_Game/mods/coderbuild/magmatools/textures/magmatools_tool_magmapick.png</li>
<li>minetest/games/Bucket_Game/mods/coderbuild/castle/castle_gates/api.txt</li>
<li>minetest/games/Bucket_Game/mods/coderbuild/ambience/api.txt</li>
<li>minetest/games/Bucket_Game/mods/coderbuild/bonemeal/api.txt</li>
<li>minetest/games/Bucket_Game/mods/coderbuild/flowerpot/api.md</li>
<li>minetest/games/Bucket_Game/mods/coderfood/farming/api.txt</li>
</ul>
<p>
Remember, you can always look at examples as well. You can find a mod
that does something similar to what you want, looking at all of the .lua
files in a mod like that may help.
</p>
<h4>Changing Existing Mods</h4>
<p>A public license allows you to change and rerelease the mod,
in addition to just being "open source." Many
mods are on GitHub, GitLab, or notabug.org to allow easy
forking. Forking is when someone other than the project owner
makes improvements or fixes (often forking implies keeping it separate
and not having your changes pulled in to the project owner's version).
If the changes
are applicable to everyone, you would usually fork it by clicking "fork"
which allows you to download your own copy of the mod with "GitHub
Desktop" for GitHub on Windows or a public licensed program like "Git
Cola." Then you would make or paste in your changes, go back to the
program and stage all tracked and untracked changes (not required on
GitHub Desktop), name the commit, click commit, then click push. Then
you can go back to the repository online where you got the mod and click
"pull request" comparing across forks to the "head" from your
repository, allowing the owner to "accept" the request or comment on
changes you need to make or regretfully decline. Usually pull requests
are preceeded by discussion, often at an issue on the issue tracker.
Unless you are fixing something, you likely will have to present
something the project owner already wants or is trivial but helpful.
If the owner declines,
you can always keep your repository and use and distribute your version
of the mod if the license allows that. In some cases, you can instead
just make a mod that overrides an existing mod--that would require
putting the mod in depends.txt, clearing crafting recipes, and other
similar steps--see <a href="https://github.com/poikilos/homedecor_ua">
github.com/poikilos/homedecor_ua</a> for an example.
</p>
<h4>Craftitems and Nodes</h4>
A node is drawn as a block, 3d mesh, or other drawtype and
is placeable. A craftitem can't be placed, so the only way to get rid
of it is to drop it, and like other things dropped it will become a
floating sprite waiting to be picked up by clicking. There are also
other types of entities in Minetest such as mobs and particles.
All items that aren't nodes are called craftitems even if they aren't
used in recipes. You can use the name of a node or craftitem when
defining a crafting recipe. However, you must depend on the mod being
used to ensure that it is loaded before your mod, if the item comes
from a different mod. You can depend on another mod by adding its name
to the depends.txt file in your mod.
<h4>Mobs</h4>
Creating passive or hostile Non-Player Characters or Enemy Characters
requires a mob api such as Simple Mobs, Mobs Redo, or codermobs
which share anestry in that order. Codermobs is included in Bucket_Game
and hence new versions of ENLIVEN. Some other mob frameworks include:
mobf, Jordan4Ibanez' OpenAI, and others.
<h4>Creating New Ores</h4>
Creating new ores or other blocks may be confusing after you learn the
API. If you want about 48 blocks before you find another cluster of
your ore, then the clust_scarcity should be 48*48*48 since the game is
3D. The chance of finding a cluster is 1 out of the clust_scarcity
number. The cluster size (clust_size) only affects the size of the
"vein" (though technically there are multiple shapes of clusters allowed
and vein is not recommended since it is hundreds of times slower).
Minetest uses the generic term cluster to refer to all patterns of ore
deposits. The number of ores in the cluster is determined by
clust_num_ores. If your clust_size is 3, then that would be a 3*3*3
cube (but you just specify 3, not 27 there) and the maximum number of
ores you could set for clust_num_ores is 27, though that is not
recommended because then the person would find a 3*3*3 area that is
completely ore (that would give the person 27 ore each time they found
a cluster). Generally, the ore is a node (drawn as a block) and the gem
or metal is a craftitem (drawn as a sprite). You normally should set the
drop of the ore to a separate craftitem (however, if it is something
you have to smelt such as a metal, you could drop the ore node, then
provide a "cooking" crafting recipe to get the metal).</p>
<p>the absheight option should only be used for ores that should appear
in mountains. It forces an ore that occurs in a negative range to also
appear in the corresponding positive range. Another confusing parameter
of the register_ore function is y_min.
Most programmers are more concerned with y_max, which is how deep a
player must dig to have a chance of mining the ore.
y_min is the value below which the
ore stops. Sometimes people set this to a very low number that normally
won't be reached, such as -31000. This number may be useful for certain
cases where an ore shouldn't occur below a certain point, such as amber
(all nodes generated in this way are called ores in Minetest even if
they are not technically a metal or mineral ore and even if they
cannot be smelted nor drop a mineral--they still use the
minetest.register_ore function).</p>
</main>

<footer>
    <% include ../partials/footer %>
</footer>

</body>
</html>
